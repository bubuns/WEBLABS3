#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
"""

import os
import shutil
import sys
from flask import Flask

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app
from app.models import db, User, Category, Course, Image, Review

def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    app = create_app()
    
    with app.app_context():
        # –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
        db.create_all()
        
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        first_category = db.session.execute(db.select(Category)).scalars().first()
        if first_category is None:
            categories = [
                Category(name='–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ'),
                Category(name='–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞'),
                Category(name='–Ø–∑—ã–∫–æ–∑–Ω–∞–Ω–∏–µ'),
            ]
            db.session.add_all(categories)
            db.session.commit()
            print("‚úì –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        existing_user = db.session.execute(db.select(User).filter_by(login='user')).scalar()
        if existing_user is None:
            user = User(first_name='–ò–≤–∞–Ω', last_name='–ò–≤–∞–Ω–æ–≤', login='user')
            user.set_password('qwerty')
            db.session.add(user)
            db.session.commit()
            print("‚úì –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω (–ª–æ–≥–∏–Ω: user, –ø–∞—Ä–æ–ª—å: qwerty)")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, –∏ –∫–ª–∞–¥—ë–º —Ñ–∞–π–ª –≤ media/images
        first_image = db.session.execute(db.select(Image)).scalars().first()
        if first_image is None:
            image = Image(
                id='default_bg',
                file_name='default.jpg',  # –∏—Å–ø–æ–ª—å–∑—É–µ–º .jpg, —á—Ç–æ–±—ã –ø–æ–ª–æ–∂–∏—Ç—å jpeg –∏–∑ static
                mime_type='image/jpeg',
                md5_hash='default_hash'
            )
            db.session.add(image)
            db.session.commit()
            print("‚úì –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ")

        # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–∞–ø–∫–µ –∑–∞–≥—Ä—É–∑–æ–∫
        upload_dir = app.config['UPLOAD_FOLDER']
        os.makedirs(upload_dir, exist_ok=True)
        img_rec = db.session.get(Image, 'default_bg')
        if img_rec is not None:
            dest_path = os.path.join(upload_dir, img_rec.storage_filename)
            if not os.path.exists(dest_path):
                # –î–ª—è jpg –∫–æ–ø–∏—Ä—É–µ–º –≥–æ—Ç–æ–≤—ã–π jpeg –∏–∑ static
                ext = os.path.splitext(img_rec.file_name)[1].lower()
                if ext in ('.jpg', '.jpeg'):
                    src_path = os.path.join(app.root_path, 'static', 'images', 'default-profile-picture-300x300.jpeg')
                else:
                    src_path = os.path.join(app.root_path, 'static', 'images', 'polytech_logo.png')
                try:
                    shutil.copyfile(src_path, dest_path)
                except FileNotFoundError:
                    # –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–¥–∏–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª-–∑–∞–≥–ª—É—à–∫—É
                    open(dest_path, 'ab').close()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫—É—Ä—Å, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        first_course = db.session.execute(db.select(Course)).scalars().first()
        if first_course is None:
            # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ id –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            any_category = db.session.execute(db.select(Category)).scalars().first()
            any_user = db.session.execute(db.select(User)).scalars().first()
            course = Course(
                name='–û—Å–Ω–æ–≤—ã Python',
                short_desc='–ò–∑—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Python',
                full_desc='–≠—Ç–æ—Ç –∫—É—Ä—Å –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç –≤–∞—Å —Å –æ—Å–Ω–æ–≤–∞–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —è–∑—ã–∫–µ Python. –í—ã –∏–∑—É—á–∏—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö, —Ñ—É–Ω–∫—Ü–∏–∏, –∫–ª–∞—Å—Å—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.',
                category_id=any_category.id,
                author_id=any_user.id,
                background_image_id='default_bg'
            )
            db.session.add(course)
            db.session.commit()
            print("‚úì –¢–µ—Å—Ç–æ–≤—ã–π –∫—É—Ä—Å —Å–æ–∑–¥–∞–Ω")
        
        print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
        print("–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: flask run")

if __name__ == '__main__':
    init_database()

